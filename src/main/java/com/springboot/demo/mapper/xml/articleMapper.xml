<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springboot.demo.mapper.articleMapper" >
<!--        <resultMap id="BaseResultMap" type="com.springboot.demo.model.article" >-->
<!--            <id column="articleId" property="article_id" jdbcType="INTEGER" />-->
<!--            <result column="username" property="username" jdbcType="VARCHAR" />-->
<!--            <result column="password" property="password" jdbcType="VARCHAR" />-->
<!--            <result column="role" property="role" jdbcType="VARCHAR" />-->
<!--        </resultMap>-->


    <select id="selectAllMessage" resultType="Map">
        select * from springBoot.article
    </select>

    <select id="getArticle" resultType="map">
        select a.article_id,a.article_title,a.article_date,b.nav_name from springBoot.article a
        left join springBoot.nav b on b.nav_id = a.nav_id
        <where>
            1=1
            <if test="navId!='test'">
                and a.nav_id = #{navId}
            </if>
            <if test="title!=null and title!=''">
                and a.article_title like #{title}
            </if>
        </where>
    </select>

    <delete id="deleteByArticleId">
        delete from springBoot.article
        where article_id = #{articleId}
    </delete>

    <insert id="upsertById">
        INSERT INTO springBoot.article (article_id, article_title, article_date, article_content, nav_id)
        VALUES (#{articleId}, #{articleTitle}, #{articleDate},#{articleContent},#{navId})
        ON DUPLICATE KEY UPDATE article_title=#{articleTitle},
                                article_content=#{articleContent},nav_id=#{navId}
    </insert>

</mapper>